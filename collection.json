{"variables":[],"info":{"name":"","_postman_id":"431f3e9b-7cf6-41e8-b565-4c04c343658a","description":"","schema":"https:\/\/schema.getpostman.com\/json\/collection\/v2.0.0\/collection.json"},"item":[{"name":"Engagement\n\nThis module handles the creation, updating and deletion of\nengagements.\nThe following represents the different options for an engagement:\n\n### Culture\n| Culture     | Value|\n|-------------|-------------:|\n| christian   | 0|\n| hindu       | 1|\n| muslim      | 2|\n| traditional | 3|\n \n### Privacy\n| Privacy     | Value|\n|-------------|-------------:|\n| private     | 0|\n| invited     | 1|\n| public      | 2|\n\n### Acceptance\n| Privacy     | Value|\n|-------------|-------------:|\n| pending     | 0|\n| rejected    | 1|\n| accepted    | 2|\n\nFor privacy, the invited value indicates that only the invited guests have access\nto seeing this engagement.\n\nThe acceptance holds the state of the engagement after creation, this will allow\nthe user involved in the engagement to accept it or reject it.","description":"","item":[{"name":"Get one public engagement by id.","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/get_one","method":"POST","body":{"mode":"formdata","formdata":[{"key":"engagement_id","value":772121753,"type":"text","enabled":true}]},"description":"Returns a public accepted engagement given its id as a parameter.","response":[]}},{"name":"Get public engagements by page.","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/get_paged","method":"POST","body":{"mode":"formdata","formdata":[{"key":"page","value":519,"type":"text","enabled":true}]},"description":"Return all public accepted engagements in pages with every page having 15 engagements.","response":[]}},{"name":"Create engagement.","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/create","method":"POST","body":{"mode":"formdata","formdata":[{"key":"surprise_other","value":"magnam","type":"text","enabled":true},{"key":"proposal_plan","value":"magnam","type":"text","enabled":true},{"key":"groom_id","value":58,"type":"text","enabled":true},{"key":"bride_id","value":58,"type":"text","enabled":true},{"key":"proposal_date","value":"1982-01-18","type":"text","enabled":true},{"key":"culture","value":58,"type":"text","enabled":true},{"key":"proposal_lat","value":58,"type":"text","enabled":true},{"key":"proposal_lng","value":58,"type":"text","enabled":true},{"key":"proposal_place","value":"magnam","type":"text","enabled":true},{"key":"image","value":"magnam","type":"text","enabled":true},{"key":"phrase","value":"magnam","type":"text","enabled":true},{"key":"type","value":58,"type":"text","enabled":true},{"key":"privacy","value":58,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nThis will create an engagement between two app users and return the engagement\nid on success. The user creating the engagement must either be the bride or\nthe groom in the engagement.","response":[]}},{"name":"Update engagement.","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/update","method":"POST","body":{"mode":"formdata","formdata":[{"key":"surprise_other","value":"perferendis","type":"text","enabled":true},{"key":"proposal_plan","value":"perferendis","type":"text","enabled":true},{"key":"groom_id","value":6,"type":"text","enabled":true},{"key":"bride_id","value":6,"type":"text","enabled":true},{"key":"proposal_date","value":"1970-08-10","type":"text","enabled":true},{"key":"culture","value":6,"type":"text","enabled":true},{"key":"proposal_lat","value":6,"type":"text","enabled":true},{"key":"proposal_lng","value":6,"type":"text","enabled":true},{"key":"proposal_place","value":"perferendis","type":"text","enabled":true},{"key":"image","value":"perferendis","type":"text","enabled":true},{"key":"phrase","value":"perferendis","type":"text","enabled":true},{"key":"type","value":6,"type":"text","enabled":true},{"key":"privacy","value":6,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nUpdates this users engagement.","response":[]}},{"name":"Get this user's engagement.","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/get","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nReturns the authenticated user's engagement if found.","response":[]}},{"name":"Close user's engagement.","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/close","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nCloses the authenticated user's engagement.","response":[]}},{"name":"Create a comment","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/comment\/create","method":"POST","body":{"mode":"formdata","formdata":[{"key":"engagement_id","value":4550437,"type":"text","enabled":true},{"key":"comment","value":"vero","type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nCreates a comment on an engagement. The engagement has to be a public\nengagement or the user has to be an invited user for them to be\nable to comment on the engagement.","response":[]}},{"name":"Update a comment","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/comment\/update","method":"POST","body":{"mode":"formdata","formdata":[{"key":"comment_id","value":3057061,"type":"text","enabled":true},{"key":"comment","value":"facere","type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nUpdates a comment that was previously made by the authenticated user","response":[]}},{"name":"Get comments.","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/comment\/get_paged","method":"POST","body":{"mode":"formdata","formdata":[{"key":"engagement_id","value":2,"type":"text","enabled":true},{"key":"page","value":2,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nReturns comments for an engagement if the user is authorized to\nview them or the engagement is a public one.","response":[]}},{"name":"Delete a comment","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/comment\/delete","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nDeletes a comment created by the user.","response":[]}},{"name":"Create a like","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/like\/create","method":"POST","body":{"mode":"formdata","formdata":[{"key":"engagement_id","value":1,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nCreates a like for this engagement by the authenticated user","response":[]}},{"name":"Remove a like","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/like\/delete","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nRemoves a like on an engagement by the authenticated user.","response":[]}},{"name":"Save Photo","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/photo\/save","method":"POST","body":{"mode":"formdata","formdata":[{"key":"image","value":"ea","type":"text","enabled":true},{"key":"user_id","value":4873,"type":"text","enabled":true},{"key":"engagement_id","value":4873,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nSaves engagement photo for the given engagement by the given user. The\nuser saving the photo must either be the owner of engagement (in which\ncase the photo is saved authorized) or another user with the permission\nto access this engagement's data (when it is public or when the user\nis an invited user)","response":[]}},{"name":"Authorize a photo.","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/photo\/authorize","method":"POST","body":{"mode":"formdata","formdata":[{"key":"photo_id","value":98,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nAuthorize a specific photo that has been posted. The authenticated user\nmust be one of the couples in the engagement.","response":[]}},{"name":"Get authorized images paged.","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/photo\/authorized","method":"POST","body":{"mode":"formdata","formdata":[{"key":"engagement_id","value":3,"type":"text","enabled":true},{"key":"user_id","value":3,"type":"text","enabled":true},{"key":"page","value":3,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nReturns a list of authorized images of this engagement if the engagement\nis public or if the user has permission (user_id holds the user of the user\naccessing the images)","response":[]}},{"name":"Get unauthorized photos paged.","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/photo\/unauthorized","method":"POST","body":{"mode":"formdata","formdata":[{"key":"engagement_id","value":1,"type":"text","enabled":true},{"key":"user_id","value":1,"type":"text","enabled":true},{"key":"page","value":1,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nReturns a list in pages of images that have not yet been\nauthorized by the couple, but have been posted already. The user\naccessing them must be one of the couples","response":[]}},{"name":"Delete a photo","request":{"url":"http:\/\/localhost:8000\/api\/engagement\/photo\/delete","method":"POST","body":{"mode":"formdata","formdata":[{"key":"photo_id","value":97,"type":"text","enabled":true},{"key":"user_id","value":97,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nDeletes an photo that has already been posted. The user deleting it\nis either the person who posted it or the couples.","response":[]}}]},{"name":"Information\n\nThis module handles requests to I Do App information requests","description":"","item":[{"name":"About Information","request":{"url":"http:\/\/localhost:8000\/api\/information\/about","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Retrive about us information HTML","response":[]}},{"name":"Terms and Conditions","request":{"url":"http:\/\/localhost:8000\/api\/information\/terms","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Retrive terms and conditions information HTML","response":[]}},{"name":"Privacy Policy","request":{"url":"http:\/\/localhost:8000\/api\/information\/policy","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Retrive privacy policy information HTML","response":[]}}]},{"name":"Inspiration\n\nThis module handles the creation, updating and deletion of\ninspiration media.\n\nNote: an inspiration is created either by the admin or a\nuser with a wedding or engagement.","description":"","item":[{"name":"Get one inspiration by id.","request":{"url":"http:\/\/localhost:8000\/api\/inspiration\/get_one","method":"POST","body":{"mode":"formdata","formdata":[{"key":"inspiration_id","value":42,"type":"text","enabled":true}]},"description":"Returns an inspiration by given the id.","response":[]}},{"name":"Get inspirations paginated.","request":{"url":"http:\/\/localhost:8000\/api\/inspiration\/get_paged","method":"POST","body":{"mode":"formdata","formdata":[{"key":"page","value":731,"type":"text","enabled":true}]},"description":"Returns a list of inspirations paginated.","response":[]}},{"name":"Create inspiration.","request":{"url":"http:\/\/localhost:8000\/api\/inspiration\/create","method":"POST","body":{"mode":"formdata","formdata":[{"key":"file","value":"perspiciatis","type":"text","enabled":true},{"key":"description","value":"perspiciatis","type":"text","enabled":true},{"key":"media_type","value":"image","type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nThis will create an inspiration. The user must have a wedding or an\nan engagement.","response":[]}},{"name":"Update inspiration.","request":{"url":"http:\/\/localhost:8000\/api\/inspiration\/update","method":"POST","body":{"mode":"formdata","formdata":[{"key":"description","value":"nobis","type":"text","enabled":true},{"key":"inspiration_id","value":9879367,"type":"text","enabled":true},{"key":"file","value":"nobis","type":"text","enabled":true},{"key":"media_type","value":"nobis","type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nThe user updating the inspiration must be the user that created it.","response":[]}},{"name":"Deletes inspiration.","request":{"url":"http:\/\/localhost:8000\/api\/inspiration\/delete","method":"POST","body":{"mode":"formdata","formdata":[{"key":"inspiration_id","value":1818,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nDeletes an inspiration. The user deleting it must have created it.","response":[]}},{"name":"Create inspiration comment.","request":{"url":"http:\/\/localhost:8000\/api\/inspiration\/comment\/create","method":"POST","body":{"mode":"formdata","formdata":[{"key":"comment","value":"corporis","type":"text","enabled":true},{"key":"inspiration_id","value":291,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nCreates a comment by a user on an inspiration.","response":[]}},{"name":"Update inspiration comment.","request":{"url":"http:\/\/localhost:8000\/api\/inspiration\/comment\/update","method":"POST","body":{"mode":"formdata","formdata":[{"key":"comment_id","value":1,"type":"text","enabled":true},{"key":"comment","value":"inventore","type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nUpdates a comment made by user on inspiration. The user updating it\nmust be the one who made the comment.","response":[]}},{"name":"Delete inspiration comment","request":{"url":"http:\/\/localhost:8000\/api\/inspiration\/comment\/delete","method":"POST","body":{"mode":"formdata","formdata":[{"key":"comment_id","value":579277,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nDeletes a comment on an inspiration. The user deleting must be\nthe one who made the comment.","response":[]}},{"name":"Creates a like on an inspiration.","request":{"url":"http:\/\/localhost:8000\/api\/inspiration\/like\/create","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nCreates a like on an inspiration by a user.","response":[]}},{"name":"Delete inspiration like","request":{"url":"http:\/\/localhost:8000\/api\/inspiration\/like\/delete","method":"POST","body":{"mode":"formdata","formdata":[{"key":"like_id","value":95,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nRemoves a like on an inspiration by the authenticated user. The user removing\nit must be the one who created it.","response":[]}}]},{"name":"Invitation\n\nThis module will handle creation, deletion and securing of invitations\nto users by the wedding couple.\n\nNote: for an inviation to be created, the user has to have a wedding.","description":"","item":[{"name":"Create invitation.","request":{"url":"http:\/\/localhost:8000\/api\/invitation\/create","method":"POST","body":{"mode":"formdata","formdata":[{"key":"wedding_id","value":115831629,"type":"text","enabled":true},{"key":"slots","value":115831629,"type":"text","enabled":true},{"key":"message","value":"ut","type":"text","enabled":true},{"key":"type","value":"link","type":"text","enabled":true},{"key":"invitee_id","value":"ut","type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nThis will create an invitation to another user for a given wedding.\nThe user creating the invitation must own the wedding for which the invitation\nis created.","response":[]}},{"name":"Cancel invitation.","request":{"url":"http:\/\/localhost:8000\/api\/invitation\/delete","method":"POST","body":{"mode":"formdata","formdata":[{"key":"invitation_id","value":792585501,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nThis will cancel an invitation that has already been created by the\nwedding couple for a particular user. The user cancelling must own the\nwedding.","response":[]}},{"name":"Secure invitation.","request":{"url":"http:\/\/localhost:8000\/api\/invitation\/secure","method":"POST","body":{"mode":"formdata","formdata":[{"key":"token","value":60954,"type":"text","enabled":true},{"key":"secured_slots","value":1010721972,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nThis will secure an invitation for a wedding for an invited user. This marks\nthe invitation as accepted.","response":[]}},{"name":"Get user invitations.","request":{"url":"http:\/\/localhost:8000\/api\/invitation\/user_invitations","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nRetrieves all the invitations for a particular user.","response":[]}},{"name":"Get wedding invitations.","request":{"url":"http:\/\/localhost:8000\/api\/invitation\/wedding_invitations","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nRetrieves all the invitations for a particular wedding. The user accesses\ninvitations of his\/her wedding.","response":[]}}]},{"name":"User\n\nThis module will handle all the user manipulation including:\n1. Registration  - with Facebook or email and password.\n2. Authentication - with Facebook ID or email and password.\n3. User details - access to logged in user's details.\n4. Assigning tokens - will assign new API access tokens for\n    an already logged in user.\n\nNote: for all the those routes marked with Auth Required,\n       the following headers must be passed:\n + 'Accept' => 'application\/json'\n + 'Authorization' => 'Bearer ' + { logged in user's token }\n\nPlease ensure you have the space after the 'Bearer ' value of the 'Authorization'\nheader e.g. 'Bearer eyJ0eXAiOiJKV1QiL...'\n\n\nIf you try to access an endpoint without the correct Bearer token you will get\n: The token has been blacklisted\n\n### Possible Errors\nThis shows all the error codes generated from this model\n\n| Code | Description|\n|-------|-------:|\n| 100 | Invalid login|\n| 101 | Required user not found|\n| 102 | User account created using Facebook|\n| 103 | Email not verified|\n| 104 | Facebook ID not found|","description":"","item":[{"name":"Login with email and password.","request":{"url":"http:\/\/localhost:8000\/api\/user\/login","method":"POST","body":{"mode":"formdata","formdata":[{"key":"email","value":"joanne.muller@example.com","type":"text","enabled":true},{"key":"password","value":"ut","type":"text","enabled":true}]},"description":"Will login a user with their email and password and return a token.\n\n#### Note\nIf the user attempting to login with email had registered\nby Facebook ID, you will also get a custom error code\nin which case you might want to notify the user that they\nshould login through facebook.\n\nDue to the above issue, a user will also be able to create\na password on an account they registered with Facebook after\nwhich the user can either login using their email and password\nor proceed with Facebook.","response":[]}},{"name":"Register with email and password.","request":{"url":"http:\/\/localhost:8000\/api\/user\/register","method":"POST","body":{"mode":"formdata","formdata":[{"key":"name","value":"ab","type":"text","enabled":true},{"key":"email","value":"ward.faye@example.com","type":"text","enabled":true},{"key":"password","value":"ab","type":"text","enabled":true},{"key":"gender","value":"male","type":"text","enabled":true},{"key":"fb_id","value":"ab","type":"text","enabled":true},{"key":"profile_pic","value":"ab","type":"text","enabled":true}]},"description":"Will register the user with email and password.\n\nIf the user email is already taken, then you will be notified\nof this.","response":[]}},{"name":"Login or register with Facebook ID.","request":{"url":"http:\/\/localhost:8000\/api\/user\/login_fb","method":"POST","body":{"mode":"formdata","formdata":[{"key":"fb_id","value":"sed","type":"text","enabled":true},{"key":"name","value":"sed","type":"text","enabled":true},{"key":"phone","value":"sed","type":"text","enabled":true},{"key":"email","value":"hand.micaela@example.com","type":"text","enabled":true},{"key":"gender","value":"male","type":"text","enabled":true},{"key":"profile_pic","value":"sed","type":"text","enabled":true}]},"description":"Will login a user with their Facebook ID and return a token. If the user\nis not available on the database already, it will create him\/her and log\nhim\/her in.\n\nNote: If the user is being signed up, the name and gender values\nwill be expected.","response":[]}},{"name":"User details.","request":{"url":"http:\/\/localhost:8000\/api\/user\/get_by_id","method":"POST","body":{"mode":"formdata","formdata":[{"key":"id","value":357172916,"type":"text","enabled":true}]},"description":"Get user by their id.","response":[]}},{"name":"Search users by name, email or phone.","request":{"url":"http:\/\/localhost:8000\/api\/user\/search_paged","method":"POST","body":{"mode":"formdata","formdata":[{"key":"count","value":13,"type":"text","enabled":true},{"key":"page","value":94608,"type":"text","enabled":true},{"key":"search_term","value":"dolorum","type":"text","enabled":true},{"key":"gender","value":"female","type":"text","enabled":true},{"key":"search_by","value":"phone","type":"text","enabled":true}]},"description":"This is will be able to search for a user with phone number,\nemail address or their username.\n\nThe following tables describes the various options with\nwhich you can search for users.\n\n### search_by\nThis is the field with which to search the users. If you\nleave this out, the search_term will be matched against\nthe name, the phone and the email.\n\n### gender\nIt is optional to specify the gender of the users you want\nto get.\n\n### page\nThis is required for pagination of the results based on a\ncount per page that you have to specify.\n\n### count\nThis is the count of users you would like to recieve on per page\nbasis. The default is 10.","response":[]}},{"name":"Refresh token","request":{"url":"http:\/\/localhost:8000\/api\/user\/refresh_token","method":"POST","body":{"mode":"formdata","formdata":[{"key":"token","value":"natus","type":"text","enabled":true}]},"description":"Note: Auth Required\n\nThis will refresh current logged in users token and return the new token","response":[]}},{"name":"User details.","request":{"url":"http:\/\/localhost:8000\/api\/user\/get_by_contact","method":"POST","body":{"mode":"formdata","formdata":[{"key":"phone","value":"eligendi","type":"text","enabled":true},{"key":"email","value":"eligendi","type":"text","enabled":true}]},"description":"Get a user either by phone number or email","response":[]}},{"name":"User details.","request":{"url":"http:\/\/localhost:8000\/api\/user\/get","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required\n\nReturns all the details of the currently logged in user.","response":[]}},{"name":"Update user details.","request":{"url":"http:\/\/localhost:8000\/api\/user\/update","method":"POST","body":{"mode":"formdata","formdata":[{"key":"name","value":"culpa","type":"text","enabled":true},{"key":"gender","value":"female","type":"text","enabled":true},{"key":"email","value":"myrtice65@example.net","type":"text","enabled":true},{"key":"phone","value":"culpa","type":"text","enabled":true},{"key":"fb_id","value":"culpa","type":"text","enabled":true},{"key":"profile_pic","value":"culpa","type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nThis will update the details of an already logged in user.","response":[]}},{"name":"Logout the user.","request":{"url":"http:\/\/localhost:8000\/api\/user\/logout","method":"POST","body":{"mode":"formdata","formdata":[{"key":"token","value":"quia","type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nWill logout the logged in user and close the session.","response":[]}},{"name":"Close user account.","request":{"url":"http:\/\/localhost:8000\/api\/user\/close_account","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nThis will close the logged in user's account by soft deleting it.","response":[]}}]},{"name":"Vendors\n\nThis module handles access to vendor details.","description":"","item":[{"name":"Get one vendor.","request":{"url":"http:\/\/localhost:8000\/api\/vendor\/get_one","method":"POST","body":{"mode":"formdata","formdata":[{"key":"vendor_id","value":7097,"type":"text","enabled":true}]},"description":"Returns one vendor details, given their id.","response":[]}},{"name":"Get vendors under category.","request":{"url":"http:\/\/localhost:8000\/api\/vendor\/get_paged","method":"POST","body":{"mode":"formdata","formdata":[{"key":"category_id","value":24839150,"type":"text","enabled":true}]},"description":"This returns a list of vendors paginated for a given category.","response":[]}},{"name":"Get one vendor category","request":{"url":"http:\/\/localhost:8000\/api\/vendor_category\/get_one","method":"POST","body":{"mode":"formdata","formdata":[{"key":"category_id","value":167,"type":"text","enabled":true}]},"description":"Returns one vendor category details.","response":[]}},{"name":"Get vendor categories.","request":{"url":"http:\/\/localhost:8000\/api\/vendor_category\/get_paged","method":"POST","body":{"mode":"formdata","formdata":[{"key":"page","value":5499885,"type":"text","enabled":true}]},"description":"This returns the list of all vendors currently available.","response":[]}}]},{"name":"Wedding\n\nThis module will handle creation, access, update and desctruction of\nweddings :)\n\nNote: for a wedding to be created, we only require to have a couple and\n      these two have to have created an account with us.","description":"","item":[{"name":"Get one public wedding by id.","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/get_one","method":"POST","body":{"mode":"formdata","formdata":[{"key":"wedding_id","value":630827,"type":"text","enabled":true}]},"description":"Returns a public wedding given its id as a parameter.","response":[]}},{"name":"Get public weddings by page.","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/get_paged","method":"POST","body":{"mode":"formdata","formdata":[{"key":"page","value":51782023,"type":"text","enabled":true}]},"description":"Return all public weddings in pages with every page having 15 weddings.","response":[]}},{"name":"Create wedding.","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/create","method":"POST","body":{"mode":"formdata","formdata":[{"key":"groom_id","value":46398,"type":"text","enabled":true},{"key":"bride_id","value":46398,"type":"text","enabled":true},{"key":"description","value":"rerum","type":"text","enabled":true},{"key":"venue","value":"rerum","type":"text","enabled":true},{"key":"reception","value":"rerum","type":"text","enabled":true},{"key":"venue_lat","value":46398,"type":"text","enabled":true},{"key":"venue_lng","value":46398,"type":"text","enabled":true},{"key":"reception_lat","value":46398,"type":"text","enabled":true},{"key":"reception_lng","value":46398,"type":"text","enabled":true},{"key":"when","value":46398,"type":"text","enabled":true},{"key":"privacy","value":46398,"type":"text","enabled":true},{"key":"image","value":"rerum","type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nThis will create a wedding between two app users and return the wedding\nid on success. The user creating the wedding must either be the bride or\nthe groom in the wedding.","response":[]}},{"name":"Update wedding.","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/update","method":"POST","body":{"mode":"formdata","formdata":[{"key":"groom_id","value":480,"type":"text","enabled":true},{"key":"bride_id","value":480,"type":"text","enabled":true},{"key":"description","value":"modi","type":"text","enabled":true},{"key":"venue","value":"modi","type":"text","enabled":true},{"key":"reception","value":"modi","type":"text","enabled":true},{"key":"venue_lat","value":480,"type":"text","enabled":true},{"key":"venue_lng","value":480,"type":"text","enabled":true},{"key":"reception_lat","value":480,"type":"text","enabled":true},{"key":"reception_lng","value":480,"type":"text","enabled":true},{"key":"when","value":480,"type":"text","enabled":true},{"key":"privacy","value":480,"type":"text","enabled":true},{"key":"image","value":"modi","type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nUpdates this users wedding.","response":[]}},{"name":"Get this user's wedding.","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/get","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nReturns the authenticated user's wedding if found.","response":[]}},{"name":"Close user wedding.","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/close","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nCloses the authenticated user's wedding.","response":[]}},{"name":"Create a comment","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/comment\/create","method":"POST","body":{"mode":"formdata","formdata":[{"key":"wedding_id","value":11,"type":"text","enabled":true},{"key":"comment","value":"voluptatem","type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nCreates a comment on a wedding. The wedding has to be a public\nwedding or the user has to be an invited user for them to be\nable to comment on the wedding.","response":[]}},{"name":"Update a comment","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/comment\/update","method":"POST","body":{"mode":"formdata","formdata":[{"key":"wedding_id","value":111972470,"type":"text","enabled":true},{"key":"page","value":111972470,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nUpdates a comment that was previously made by the user","response":[]}},{"name":"Get comments.","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/comment\/get_paged","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nReturns comments for a wedding if the user is authorized to\nview them or the wedding is a public one.","response":[]}},{"name":"Delete a comment","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/comment\/delete","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nDeletes a comment created by the user.","response":[]}},{"name":"Create a like","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/like\/create","method":"POST","body":{"mode":"formdata","formdata":[{"key":"wedding_id","value":901,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nCreates a like for this wedding by the authenticated user","response":[]}},{"name":"Remove a like","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/like\/delete","method":"POST","body":{"mode":"formdata","formdata":[]},"description":"Note: Auth Required.\n\nRemoves a like on an wedding by the authentcated user.","response":[]}},{"name":"Save Photo","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/photo\/save","method":"POST","body":{"mode":"formdata","formdata":[{"key":"image","value":"rerum","type":"text","enabled":true},{"key":"user_id","value":823006276,"type":"text","enabled":true},{"key":"wedding_id","value":823006276,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nSaves wedding photo for the given wedding by the given user. The\nuser saving the photo must either be the owner of wedding (in which\ncase the photo is saved authorized) or another user with the permission\nto access this wedding's data (when it is public or when the user\nis an invited user)","response":[]}},{"name":"Authorize a photo.","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/photo\/authorize","method":"POST","body":{"mode":"formdata","formdata":[{"key":"photo_id","value":74099,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nAuthorize a specific photo that has been posted. The authenticated user\nmust be one of the couples in the wedding.","response":[]}},{"name":"Get authorized images paged.","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/photo\/authorized","method":"POST","body":{"mode":"formdata","formdata":[{"key":"wedding_id","value":422,"type":"text","enabled":true},{"key":"user_id","value":422,"type":"text","enabled":true},{"key":"page","value":422,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nReturns a list of authorized images of this wedding if the wedding\nis public or if the user has permission.","response":[]}},{"name":"Get unauthorized photos paged.","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/photo\/unauthorized","method":"POST","body":{"mode":"formdata","formdata":[{"key":"wedding_id","value":8586956,"type":"text","enabled":true},{"key":"user_id","value":8586956,"type":"text","enabled":true},{"key":"page","value":8586956,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nReturns a list in pages of images that have not yet been\nauthorized by the couple, but have been posted already. The user\naccessing them must be one of the couples","response":[]}},{"name":"Delete a photo","request":{"url":"http:\/\/localhost:8000\/api\/wedding\/photo\/delete","method":"POST","body":{"mode":"formdata","formdata":[{"key":"photo_id","value":92026811,"type":"text","enabled":true},{"key":"user_id","value":92026811,"type":"text","enabled":true}]},"description":"Note: Auth Required.\n\nDeletes an photo that has already been posted. The user deleting it\nis either the person who posted it or the couples.","response":[]}}]}]}